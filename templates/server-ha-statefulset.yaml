# StatefulSet to run the actual vault server cluster.
{{- if (or (and (ne (.Values.consulHA.enabled | toString) "-") .Values.consulHA.enabled) (and (eq (.Values.consulHA.enabled | toString) "-") .Values.global.enabled)) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "vault.fullname" . }}-ha-server
  labels:
    app: {{ template "vault.name" . }}
    chart: {{ template "vault.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  serviceName: {{ template "vault.fullname" . }}-ha-server
  podManagementPolicy: Parallel
  replicas: {{ .Values.consulHA.replicas }}
  # TODO: add updatePartition option 
  {{- if (gt (int .Values.consulHA.updatePartition) 0) }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: {{ .Values.consulHA.updatePartition }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "vault.name" . }}
      chart: {{ template "vault.chart" . }}
      release: {{ .Release.Name }}
      component: server
  template:
    metadata:
      labels:
        app: {{ template "vault.name" . }}
        chart: {{ template "vault.chart" . }}
        release: {{ .Release.Name }}
        component: server
    spec:
      #TODO: look at how Consul exposes affinity
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: {{ template "vault.fullname" . }}-server-config
            defaultMode: 0755
        {{- range .Values.consulHA.extraVolumes }}
        - name: userconfig-{{ .name }}
          {{ .type }}:
            {{- if (eq .type "configMap") }}
            name: {{ .name }}
            {{- else if (eq .type "secret") }}
            secretName: {{ .name }}
            {{- end }}
        {{- end }}
      containers:
        - name: vault
          securityContext:
            fsGroup: 1000
            # TODO: confirm Vault needs this
            privileged: true
          image: "{{ default .Values.global.image .Values.consulHA.image }}"
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: VAULT_ADDR 
              value: "http://localhost:8200"
          #TODO: review how swapping of POD_IP, HOST_IP values is done
          command:
            - "/bin/sh"
            - "-ec"
            - |
                export VAULT_CLUSTER_ADDR=http://${POD_IP}:8201

                sed -E "s/HOST_IP/${HOST_IP}/g" /vault/config/statefulconfig-from-values.hcl > storageconfig.hcl
                sed -Ei "s/POD_IP/${POD_IP}/g" storageconfig.hcl

                vault server -config=storageconfig.hcl
          volumeMounts:
            - name: config
              mountPath: /vault/config
            {{- range .Values.consulHA.extraVolumes }}
            - name: userconfig-{{ .name }}
              readOnly: true
              mountPath: /vault/userconfig/{{ .name }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                - vault operator step-down
          ports:
            - containerPort: 8200
              name: http
          readinessProbe:
            # NOTE(mitchellh): when our HTTP status endpoints support the
            # proper status codes, we should switch to that. This is temporary.
            # TODO: verify for Vault
            # Check status; unsealed vault servers return 0
            exec:
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  vault status
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 5
{{- end }}
